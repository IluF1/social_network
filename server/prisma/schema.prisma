generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String?
  login     String   @unique
  password  String
  avatar    String?  @default("https://i.pinimg.com/564x/36/72/fa/3672fae383c1cbabe5bf4408c9e4ef2b.jpg")
  createdAt DateTime @default(now())
  role      String   @default("user")

  posts    Post[]    @relation("AuthorPosts")
  likes    Likes[]
  sessions Session[]

  Comments Comments[]
}

model Post {
  id        Int        @id @default(autoincrement())
  content   String
  title String?
  image     String?
  createdAt DateTime   @default(now())
  authorId  Int
  author    User       @relation("AuthorPosts", fields: [authorId], references: [id])
  likes     Likes[]
  comments  Comments[]
}

model Likes {
  id        Int      @id @default(autoincrement())
  postId    Int
  userId    Int
  createdAt DateTime @default(now())
  post      Post     @relation(fields: [postId], references: [id])
  user      User     @relation(fields: [userId], references: [id])

  @@unique([postId, userId]) 
}


model Comments {
  id        Int      @id @default(autoincrement())
  postId    Int
  userId    Int
  createdAt DateTime @default(now())
  Post      Post?  @relation(fields: [postId], references: [id])
  content   String
  user      User     @relation(fields: [userId], references: [id])
}

model Session {
  id           Int      @id @default(autoincrement())
  userId       Int
  sessionToken String   @unique
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  expiresAt    DateTime
  user         User     @relation(fields: [userId], references: [id])
}
